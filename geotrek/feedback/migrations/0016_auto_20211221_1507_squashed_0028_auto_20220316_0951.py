# Generated by Django 3.1.14 on 2022-04-27 14:49

import colorfield.fields
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    replaces = [
        ("feedback", "0016_auto_20211221_1507"),
        ("feedback", "0017_timerevent"),
        ("feedback", "0018_auto_20211229_1013"),
        ("feedback", "0019_report_uses_timers"),
        ("feedback", "0020_reportstatus_color"),
        ("feedback", "0021_auto_20220114_1446"),
        ("feedback", "0022_auto_20220117_1008"),
        ("feedback", "0023_pendingemail_pendingsuricateapirequest"),
        ("feedback", "0024_report_sync_error"),
        ("feedback", "0025_auto_20220125_0907"),
        ("feedback", "0026_predefinedemail"),
        ("feedback", "0027_report_mail_error"),
        ("feedback", "0028_auto_20220316_0951"),
    ]

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("feedback", "0015_reportproblemmagnitude_suricate_label"),
        ("trekking", "0027_auto_20210121_0943"),
    ]

    operations = [
        migrations.AlterField(
            model_name="report",
            name="related_trek",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                to="trekking.trek",
                verbose_name="Related trek",
            ),
        ),
        migrations.CreateModel(
            name="SelectableUser",
            fields=[],
            options={
                "proxy": True,
                "indexes": [],
                "constraints": [],
            },
            bases=("auth.user",),
        ),
        migrations.CreateModel(
            name="WorkflowManager",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.PROTECT,
                        to="feedback.selectableuser",
                    ),
                ),
            ],
            options={
                "verbose_name": "Workflow Manager",
                "verbose_name_plural": "Workflow Managers",
            },
        ),
        migrations.AddField(
            model_name="report",
            name="assigned_user",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.PROTECT,
                related_name="reports",
                to="feedback.selectableuser",
                verbose_name="Supervisor",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="uses_timers",
            field=models.BooleanField(
                default=False,
                help_text="Launch timers to alert supervisor if report is not being treated on time",
                verbose_name="Use timers",
            ),
        ),
        migrations.AddField(
            model_name="reportstatus",
            name="color",
            field=colorfield.fields.ColorField(
                default="#444444", max_length=18, verbose_name="Color"
            ),
        ),
        migrations.RenameField(
            model_name="attachedmessage",
            old_name="suricate_id",
            new_name="identifier",
        ),
        migrations.RenameField(
            model_name="reportactivity",
            old_name="suricate_id",
            new_name="identifier",
        ),
        migrations.RenameField(
            model_name="reportcategory",
            old_name="suricate_id",
            new_name="identifier",
        ),
        migrations.RenameField(
            model_name="reportproblemmagnitude",
            old_name="suricate_id",
            new_name="identifier",
        ),
        migrations.RenameField(
            model_name="reportstatus",
            old_name="suricate_id",
            new_name="identifier",
        ),
        migrations.AlterUniqueTogether(
            name="attachedmessage",
            unique_together={("identifier", "date", "report")},
        ),
        migrations.CreateModel(
            name="TimerEvent",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("date_event", models.DateTimeField(default=django.utils.timezone.now)),
                ("deadline", models.DateTimeField()),
                ("notification_sent", models.BooleanField(default=False)),
                (
                    "report",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timers",
                        to="feedback.report",
                    ),
                ),
                (
                    "step",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="timers",
                        to="feedback.reportstatus",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PendingSuricateAPIRequest",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "request_type",
                    models.CharField(
                        choices=[("GET", "Get Request"), ("POST", "Post Request")],
                        max_length=4,
                    ),
                ),
                (
                    "api",
                    models.CharField(
                        choices=[("STA", "Standard API"), ("MAN", "Management API")],
                        max_length=3,
                    ),
                ),
                ("endpoint", models.CharField(max_length=40)),
                ("params", models.JSONField(max_length=300)),
                ("error_message", models.TextField()),
                ("retries", models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name="PendingEmail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "recipient",
                    models.EmailField(
                        blank=True, max_length=256, null=True, verbose_name="Email"
                    ),
                ),
                ("subject", models.CharField(max_length=200)),
                ("message", models.TextField(verbose_name="Message")),
                ("error_message", models.TextField()),
                ("retries", models.IntegerField(default=0)),
                (
                    "report",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="feedback.report",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="PredefinedEmail",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "label",
                    models.CharField(max_length=500, verbose_name="Predefined email"),
                ),
                (
                    "text",
                    models.TextField(
                        blank=True, help_text="Mail body", verbose_name="Content"
                    ),
                ),
            ],
            options={
                "verbose_name": "Predefined email",
                "verbose_name_plural": "Predefined emails",
            },
        ),
        migrations.AddField(
            model_name="report",
            name="mail_errors",
            field=models.IntegerField(
                default=0,
                help_text="A notification email could not be sent. Please contact an administrator",
                verbose_name="Mail error",
            ),
        ),
        migrations.AddField(
            model_name="report",
            name="sync_errors",
            field=models.IntegerField(
                default=0,
                help_text="Synchronisation with Suricate is currently pending due to connection problems",
                verbose_name="Synchronisation error",
            ),
        ),
    ]
