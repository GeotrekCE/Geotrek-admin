x-images:
  django: &django
    image: geotrek
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: dev
      args:
        BASE_IMAGE: ${DEV_BASE_IMAGE:-ubuntu:jammy}
    user: ${UID:-1000}:${GID:-1000}
    env_file:
      - .env
    volumes:
      - .:/opt/geotrek-admin

services:
  postgres:
    image: ${POSTGRES_IMAGE:-pgrouting/pgrouting:12-3.0-3.0.0}
    env_file:
      - .env
    ports:
      - "${POSTGRES_LOCAL_PORT:-5432}:5432"
    volumes:
      - postgres:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER:-geotrek}", "-d", "${POSTGRES_DB:-geotrekdb}"]
      interval: 10s
      retries: 5
      start_period: 30s
      timeout: 5s

  redis:
    image: redis:5.0-alpine
    volumes:
      - redis:/data

  convertit:
    image: makinacorpus/convertit:latest

  screamshotter:
    image: makinacorpus/screamshotter:v2

  celery:
    <<: [ *django ]
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_started

    command: celery -A geotrek worker -c 1

  web:
    <<: [ *django ]

    ports:
      - "${WEB_PORT:-8000}:8000"

    depends_on:
      screamshotter:
        condition: service_started
      convertit:
        condition: service_started
      celery:
        condition: service_started

    networks:
      default:
        aliases:
          - ${SERVER_NAME}

volumes:
  postgres:
  redis:
