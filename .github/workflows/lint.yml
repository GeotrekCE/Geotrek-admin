name: Linting

on:
  workflow_dispatch:
  pull_request:
    paths:
      - 'geotrek/**'  # if geotrek code change
      - '.github/workflows/lint.yml'  # if lint workflow change
      - 'requirements-dev.txt'  # if requirements-dev.txt change
      - 'ruff.toml'   # if lint tools configuration change

env:
  DEBIAN_FRONTEND: noninteractive

jobs:
  migrations:
    name: Checking SRID in migrations files
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - run: |
          test $(ls geotrek/*/migrations/*.py | xargs grep -l srid | xargs grep -L SRID | wc -l) -eq 0

  flake8:
    name: Checking lint rules
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
      - uses: astral-sh/setup-uv@v7
        with:
            version: "latest"
            python-version: "3.10"
            enable-cache: true
            cache-suffix: "ruff"
            activate-environment: true

      - name: Install dependencies
        run: |
          uv pip install -c requirements-dev.txt ruff

      - name: Check linting
        run: |
          ruff check geotrek

      - name: Check format
        run: |
          ruff format --check geotrek

  translations:
    name: Checking .po files are up-to-date
    runs-on: ubuntu-latest
    envenv:
      DEBIAN_FRONTEND: noninteractive
      POSTGRES_DB: ci_test
      POSTGRES_PASSWORD: ci_test
      POSTGRES_USER: ci_test
      POSTGRES_HOST: 127.0.0.1
      SERVER_NAME: geotrek.local
      SECRET_KEY: test-test-test
      CONVERSION_HOST: localhost
      CAPTURE_HOST: localhost
      REDIS_HOST: 127.0.0.1
      VAR_DIR: /home/runner/work/Geotrek-admin/Geotrek-admin/var
      LANG: C.UTF-8
      LANGUAGES: en fr
      LANGUAGE_CODE: en
    strategy:
      matrix:
        os: ['focal-3.8']
        python-version: ['3.8']

    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
            cache: 'pip'
            python-version: '3.8.18'
            cache-dependency-path: |
                requirements.txt
                dev-requirements.txt
                docs/requirements.txt

      - uses: actions/cache@v3
        with:
            path: |
                ./venv
            key: pip-${{ matrix.python-version }}-${{ matrix.os }}-${{ hashFiles('./requirements.txt', './dev-requirements.txt', './docs/requirements.txt') }}
            restore-keys: |
              pip-${{ matrix.python-version }}-${{ matrix.os }}-${{ hashFiles('./requirements.txt', './dev-requirements.txt', './docs/requirements.txt') }}
              pip-${{ matrix.python-version }}-${{ matrix.os }}

      - name: Install deps
        run: |
          sudo apt-get -qq update
          sudo apt-get -yqq install gettext libcairo2 libpq-dev
          python3.8 -m venv venv
          ./venv/bin/pip install -r requirements.txt

      - name: Generate translation files
        run: |
          mkdir -p /opt/geotrek-admin/var/log
          ENV=dev ./venv/bin/python ./manage.py makemessages -a --no-location --no-obsolete

      - uses: tj-actions/verify-changed-files@v20
        id: verify-changed-files
        with:
          files: |
            **/*.po


      - name: Verify translation files changed
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        env:
          CHANGED_FILES: ${{ steps.verify-changed-files.outputs.changed_files }}
        run: |
          echo "Changed files: $CHANGED_FILES"
          #git diff -p
          core.setFailed('Please fix your translation files with ./manage.py makemessages -a --no-location --no-obsolete')
