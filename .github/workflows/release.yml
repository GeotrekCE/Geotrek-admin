name: Release process

on:
  workflow_run:
    workflows: ["Test CI"]
    types:
      - completed

  workflow_dispatch:
    inputs:
      version:
        description: 'Version number'
        required: true
        type: string

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run_other_workflows:
    name: Run other workflows
    runs-on: ubuntu-latest
    steps:
      - name: Trigger Test CI workflow
        uses: benc-uk/workflow-dispatch@v1
        with:
            workflow: 'Linting'
            repo: ${{ github.repository }}
            ref: 'master'
            token: ${{ secrets.GITHUB_TOKEN }}

  deploy:
    name: Publish
    needs: [run_other_workflows]
    runs-on: ubuntu-latest
    permissions:
      # Give the default GITHUB_TOKEN write permission to commit and push the
      # added or changed files to the repository.
      contents: write
    steps:
      - uses: actions/checkout@v5
      - name: Prepare release
        run: |
          echo "Preparing release ${{ github.event.inputs.version }}"
          make release version=${{ github.event.inputs.version }}

      - name: Commit prepare release changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
            # Optional. Commit message for the created commit.
            # Defaults to "Apply automatic changes"
            commit_message: "Prepare release ${{ github.event.inputs.version }}"
            tagging_message: ${{ github.event.inputs.version }}
#       - name: Tag, push and create associated new release with auto generated notes
#         run: |
#           git tag ${{ github.event.inputs.version }}
#           git push origin HEAD --tags
#           gh release create ${{ github.event.inputs.version }} --title "Release ${{ github.event.inputs.version }}"
#         #  env:
#         #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#
#       #- name: Make release
      #  uses: ncipollo/release-action@v1
      #  with:
      #    tag: ${{ github.event.inputs.version }}
      #    name: Release ${{ github.event.inputs.version }}
